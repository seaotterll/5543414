FIRST PRACTICE
"""
Function Parameter:
number (integer): The number to be checked for primality.

Instructions:
- The function should return 'True' if the 'number' is a prime number and 'False' otherwise.
- A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.
- Consider edge cases, such as when the input is less than 2, which is not a prime number.
- https://mathspar.com/prime-numbers/#how-to-tell-if-a-number-is-prime

"""


import math
def is_prime(number):  
    if number<=1:
        return False
    for i in range(2, int(math.sqrt(number))+1):
        if number % i == 0:
            return False
  
    return True


# Test cases
print(is_prime(11))  # Expected output: True
print(is_prime(4))  # Expected output: False
print(is_prime(2))  # Expected output: True
print(is_prime(1))  # Expected output: False


SECOND PARACTICE

import math
def is_prime(number):  
   if number<=1:
       return False
   for i in range(2,int(math.sqrt(number))+1):
       if number % i==0:
           return False
   
   return True
   #注意这一行的缩进！！


# Test cases
print(is_prime(11))  # Expected output: True
print(is_prime(4))  # Expected output: False
print(is_prime(2))  # Expected output: True
print(is_prime(1))  # Expected output: False
